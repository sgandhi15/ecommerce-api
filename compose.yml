services:
  mongo:
    image: mongo
    container_name: ecommerce-mongo-db
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    ports:
      - '27017:27017'
    volumes:
      - mongodb_data:/data/db
    networks:
      - ecommerce-network
    healthcheck:
      test: ['CMD', 'mongosh', '--eval', "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
  mongo-express:
    image: mongo-express
    container_name: ecommerce-mongo-express-admin
    restart: always
    ports:
      - '8081:8081'
    environment:
      ME_CONFIG_MONGODB_URL: ${ME_CONFIG_MONGODB_URL}
      ME_CONFIG_BASICAUTH_ENABLED: ${ME_CONFIG_BASICAUTH_ENABLED}
      ME_CONFIG_BASICAUTH_USERNAME: ${ME_CONFIG_BASICAUTH_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${ME_CONFIG_BASICAUTH_PASSWORD}
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - ecommerce-network
  nest-app:
    container_name: ecommerce-nest-api
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '${PORT}:${PORT}'
    environment:
      MONGO_URI: ${MONGO_URI}
      PORT: ${PORT}
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - ecommerce-network
    restart: always

volumes:
  mongodb_data:
    driver: local

networks:
  ecommerce-network:
    driver: bridge
